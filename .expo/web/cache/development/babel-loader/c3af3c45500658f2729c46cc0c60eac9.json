{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ListItem = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _config = require(\"../config\");\n\nvar _Avatar = _interopRequireDefault(require(\"../avatar/Avatar\"));\n\nvar _Badge = _interopRequireDefault(require(\"../badge/Badge\"));\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _Text = _interopRequireDefault(require(\"../text/Text\"));\n\nvar _ListItemContent = _interopRequireDefault(require(\"./ListItemContent\"));\n\nvar _ListItemChevron = _interopRequireDefault(require(\"./ListItemChevron\"));\n\nvar _ListItemInput = _interopRequireDefault(require(\"./ListItemInput\"));\n\nvar _ListItemCheckBox = _interopRequireDefault(require(\"./ListItemCheckBox\"));\n\nvar _ListItemButtonGroup = _interopRequireDefault(require(\"./ListItemButtonGroup\"));\n\nvar _ListItemTitle = _interopRequireDefault(require(\"./ListItemTitle\"));\n\nvar _ListItemSubtitle = _interopRequireDefault(require(\"./ListItemSubtitle\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\node_modules\\\\react-native-elements\\\\src\\\\list\\\\ListItem.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar checkmarkDefaultProps = function checkmarkDefaultProps(theme) {\n  return {\n    name: 'check',\n    size: 20,\n    color: theme.colors.primary\n  };\n};\n\nvar renderAvatar = function renderAvatar(content) {\n  return (0, _helpers.renderNode)(_Avatar.default, content, {\n    size: 40,\n    rounded: true\n  });\n};\n\nvar renderIcon = function renderIcon(content, theme) {\n  return (0, _helpers.renderNode)(_Icon.default, content, {\n    color: _reactNative.Platform.select(theme.colors.platform).grey,\n    size: 24\n  });\n};\n\nvar ListItem = function ListItem(props) {\n  var title = props.title,\n      titleStyle = props.titleStyle,\n      titleProps = props.titleProps,\n      subtitle = props.subtitle,\n      subtitleStyle = props.subtitleStyle,\n      subtitleProps = props.subtitleProps,\n      containerStyle = props.containerStyle,\n      onPress = props.onPress,\n      onLongPress = props.onLongPress,\n      _props$Component = props.Component,\n      Component = _props$Component === void 0 ? onPress || onLongPress ? _reactNative.TouchableHighlight : _reactNative.View : _props$Component,\n      leftIcon = props.leftIcon,\n      leftAvatar = props.leftAvatar,\n      leftElement = props.leftElement,\n      rightIcon = props.rightIcon,\n      rightAvatar = props.rightAvatar,\n      rightElement = props.rightElement,\n      rightTitle = props.rightTitle,\n      rightTitleStyle = props.rightTitleStyle,\n      rightTitleProps = props.rightTitleProps,\n      rightSubtitle = props.rightSubtitle,\n      rightSubtitleStyle = props.rightSubtitleStyle,\n      rightSubtitleProps = props.rightSubtitleProps,\n      input = props.input,\n      buttonGroup = props.buttonGroup,\n      switchProps = props.switch,\n      checkBox = props.checkBox,\n      badge = props.badge,\n      chevron = props.chevron,\n      contentContainerStyle = props.contentContainerStyle,\n      rightContentContainerStyle = props.rightContentContainerStyle,\n      checkmark = props.checkmark,\n      disabled = props.disabled,\n      disabledStyle = props.disabledStyle,\n      bottomDivider = props.bottomDivider,\n      topDivider = props.topDivider,\n      pad = props.pad,\n      linearGradientProps = props.linearGradientProps,\n      _props$ViewComponent = props.ViewComponent,\n      ViewComponent = _props$ViewComponent === void 0 ? linearGradientProps && global.Expo ? global.Expo.LinearGradient : _reactNative.View : _props$ViewComponent,\n      theme = props.theme,\n      children = props.children,\n      attributes = (0, _objectWithoutProperties2.default)(props, [\"title\", \"titleStyle\", \"titleProps\", \"subtitle\", \"subtitleStyle\", \"subtitleProps\", \"containerStyle\", \"onPress\", \"onLongPress\", \"Component\", \"leftIcon\", \"leftAvatar\", \"leftElement\", \"rightIcon\", \"rightAvatar\", \"rightElement\", \"rightTitle\", \"rightTitleStyle\", \"rightTitleProps\", \"rightSubtitle\", \"rightSubtitleStyle\", \"rightSubtitleProps\", \"input\", \"buttonGroup\", \"switch\", \"checkBox\", \"badge\", \"chevron\", \"contentContainerStyle\", \"rightContentContainerStyle\", \"checkmark\", \"disabled\", \"disabledStyle\", \"bottomDivider\", \"topDivider\", \"pad\", \"linearGradientProps\", \"ViewComponent\", \"theme\", \"children\"]);\n\n  if (title) {\n    console.warn(\"'ListItem.title' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (titleStyle) {\n    console.warn(\"'ListItem.titleStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (titleProps) {\n    console.warn(\"'ListItem.titleProps' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (subtitle) {\n    console.warn(\"'ListItem.subtitle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (subtitleStyle) {\n    console.warn(\"'ListItem.subtitleStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (subtitleProps) {\n    console.warn(\"'ListItem.subtitleProps' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (leftIcon) {\n    console.warn(\"'ListItem.leftIcon' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (leftAvatar) {\n    console.warn(\"'ListItem.leftAvatar' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (leftElement) {\n    console.warn(\"'ListItem.leftElement' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightTitle) {\n    console.warn(\"'ListItem.rightTitle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightTitleStyle) {\n    console.warn(\"'ListItem.rightTitleStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightTitleProps) {\n    console.warn(\"'ListItem.rightTitleProps' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightSubtitle) {\n    console.warn(\"'ListItem.rightSubtitle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightSubtitleStyle) {\n    console.warn(\"'ListItem.rightSubtitleStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightSubtitleProps) {\n    console.warn(\"'ListItem.rightSubtitleProps' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (input) {\n    console.warn(\"'ListItem.input' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (buttonGroup) {\n    console.warn(\"'ListItem.buttonGroup' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (switchProps) {\n    console.warn(\"'ListItem.switch' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (checkBox) {\n    console.warn(\"'ListItem.checkBox' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (badge) {\n    console.warn(\"'ListItem.badge' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (chevron) {\n    console.warn(\"'ListItem.chevron' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (contentContainerStyle) {\n    console.warn(\"'ListItem.contentContainerStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (rightContentContainerStyle) {\n    console.warn(\"'ListItem.rightContentContainerStyle' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (checkmark) {\n    console.warn(\"'ListItem.checkmark' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  return _react.default.createElement(Component, (0, _extends2.default)({}, attributes, {\n    onPress: onPress,\n    onLongPress: onLongPress,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(PadView, (0, _extends2.default)({\n    Component: ViewComponent\n  }, linearGradientProps, {\n    style: _reactNative.StyleSheet.flatten([styles.container(theme), (buttonGroup || switchProps) && {\n      paddingVertical: 8\n    }, topDivider && {\n      borderTopWidth: _reactNative.StyleSheet.hairlineWidth\n    }, bottomDivider && {\n      borderBottomWidth: _reactNative.StyleSheet.hairlineWidth\n    }, containerStyle, disabled && disabledStyle]),\n    pad: pad,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }), (0, _helpers.renderNode)(_Text.default, leftElement), renderIcon(leftIcon, theme), renderAvatar(leftAvatar), (!!title || !!subtitle) && _react.default.createElement(_ListItemContent.default, {\n    style: contentContainerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, title && (0, _helpers.renderNode)(_ListItemTitle.default, title, _objectSpread({\n    style: titleStyle\n  }, titleProps)), subtitle && (0, _helpers.renderNode)(_ListItemSubtitle.default, subtitle, _objectSpread({\n    style: subtitleStyle\n  }, subtitleProps))), (!!rightTitle || !!rightSubtitle) && _react.default.createElement(_ListItemContent.default, {\n    right: true,\n    style: rightContentContainerStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }, rightTitle && (0, _helpers.renderNode)(_ListItemTitle.default, rightTitle, _objectSpread({\n    right: true,\n    style: rightTitleStyle\n  }, rightTitleProps)), rightSubtitle && (0, _helpers.renderNode)(_ListItemSubtitle.default, rightSubtitle, _objectSpread({\n    right: true,\n    style: rightSubtitleStyle\n  }, rightSubtitleProps))), input && _react.default.createElement(_ListItemInput.default, (0, _extends2.default)({}, input, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 19\n    }\n  })), switchProps && _react.default.createElement(_reactNative.Switch, (0, _extends2.default)({}, switchProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  })), checkBox && _react.default.createElement(_ListItemCheckBox.default, (0, _extends2.default)({}, checkBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 22\n    }\n  })), badge && _react.default.createElement(_Badge.default, (0, _extends2.default)({}, badge, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 19\n    }\n  })), buttonGroup && _react.default.createElement(_ListItemButtonGroup.default, (0, _extends2.default)({}, buttonGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  })), renderAvatar(rightAvatar), renderIcon(rightIcon, theme), (0, _helpers.renderNode)(_Text.default, rightElement), (0, _helpers.renderNode)(_Icon.default, checkmark, checkmarkDefaultProps(theme)), chevron && _react.default.createElement(_ListItemChevron.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }), children));\n};\n\nexports.ListItem = ListItem;\nvar styles = {\n  container: function container(theme) {\n    return _objectSpread(_objectSpread({}, _reactNative.Platform.select({\n      ios: {\n        padding: 14\n      },\n      default: {\n        padding: 16\n      }\n    })), {}, {\n      flexDirection: 'row',\n      alignItems: 'center',\n      backgroundColor: theme.colors.white,\n      borderColor: theme.colors.divider\n    });\n  }\n};\nListItem.propTypes = {\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  contentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  rightContentContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  Component: _propTypes.default.elementType,\n  onPress: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  title: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  titleProps: _propTypes.default.object,\n  subtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  subtitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  subtitleProps: _propTypes.default.object,\n  leftIcon: _helpers.nodeType,\n  leftAvatar: _helpers.nodeType,\n  leftElement: _helpers.nodeType,\n  rightIcon: _helpers.nodeType,\n  rightAvatar: _helpers.nodeType,\n  rightElement: _helpers.nodeType,\n  rightTitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  rightTitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  rightTitleProps: _propTypes.default.object,\n  rightSubtitle: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.element]),\n  rightSubtitleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  rightSubtitleProps: _propTypes.default.object,\n  input: _propTypes.default.object,\n  buttonGroup: _propTypes.default.object,\n  switch: _propTypes.default.object,\n  checkBox: _propTypes.default.object,\n  badge: _propTypes.default.object,\n  chevron: _helpers.nodeType,\n  checkmark: _helpers.nodeType,\n  disabled: _propTypes.default.bool,\n  disabledStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  topDivider: _propTypes.default.bool,\n  bottomDivider: _propTypes.default.bool,\n  pad: _propTypes.default.number,\n  linearGradientProps: _propTypes.default.object,\n  ViewComponent: _propTypes.default.elementType,\n  theme: _propTypes.default.object\n};\nListItem.defaultProps = {\n  pad: 16,\n  title: ''\n};\n\nvar PadView = function (_React$Component) {\n  (0, _inherits2.default)(PadView, _React$Component);\n\n  var _super = _createSuper(PadView);\n\n  function PadView(props) {\n    var _this2;\n\n    (0, _classCallCheck2.default)(this, PadView);\n    _this2 = _super.call(this, props);\n\n    _this2.setNativeProps = function (nativeProps) {\n      _this2._root.current.setNativeProps(nativeProps);\n    };\n\n    _this2._root = _react.default.createRef();\n    return _this2;\n  }\n\n  (0, _createClass2.default)(PadView, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          pad = _this$props.pad,\n          Component = _this$props.Component,\n          props = (0, _objectWithoutProperties2.default)(_this$props, [\"children\", \"pad\", \"Component\"]);\n\n      var childrens = _react.default.Children.toArray(children);\n\n      var length = childrens.length;\n      var Container = Component || _reactNative.View;\n      return _react.default.createElement(Container, (0, _extends2.default)({}, props, {\n        ref: this._root,\n        testID: \"padView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 7\n        }\n      }), _react.default.Children.map(childrens, function (child, index) {\n        return child && [child, index !== length - 1 && _react.default.createElement(_reactNative.View, {\n          style: {\n            paddingLeft: pad\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 39\n          }\n        })];\n      }));\n    }\n  }]);\n  return PadView;\n}(_react.default.Component);\n\nPadView.propTypes = {\n  children: _propTypes.default.node,\n  pad: _propTypes.default.number,\n  Component: _propTypes.default.elementType\n};\nvar ThemedListItem = (0, _config.withTheme)(ListItem, 'ListItem');\nThemedListItem.Chevron = _ListItemChevron.default;\nThemedListItem.Content = _ListItemContent.default;\nThemedListItem.Input = _ListItemInput.default;\nThemedListItem.Title = _ListItemTitle.default;\nThemedListItem.Subtitle = _ListItemSubtitle.default;\nThemedListItem.CheckBox = _ListItemCheckBox.default;\nThemedListItem.ButtonGroup = _ListItemButtonGroup.default;\nvar _default = ThemedListItem;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/node_modules/react-native-elements/src/list/ListItem.js"],"names":["checkmarkDefaultProps","theme","name","size","color","colors","primary","renderAvatar","content","Avatar","rounded","renderIcon","Icon","Platform","select","platform","grey","ListItem","props","title","titleStyle","titleProps","subtitle","subtitleStyle","subtitleProps","containerStyle","onPress","onLongPress","Component","TouchableHighlight","View","leftIcon","leftAvatar","leftElement","rightIcon","rightAvatar","rightElement","rightTitle","rightTitleStyle","rightTitleProps","rightSubtitle","rightSubtitleStyle","rightSubtitleProps","input","buttonGroup","switchProps","switch","checkBox","badge","chevron","contentContainerStyle","rightContentContainerStyle","checkmark","disabled","disabledStyle","bottomDivider","topDivider","pad","linearGradientProps","ViewComponent","global","Expo","LinearGradient","children","attributes","console","warn","StyleSheet","flatten","styles","container","paddingVertical","borderTopWidth","hairlineWidth","borderBottomWidth","Text","ListItemTitle","style","ListItemSubtitle","right","ios","padding","default","flexDirection","alignItems","backgroundColor","white","borderColor","divider","propTypes","PropTypes","oneOfType","object","array","elementType","func","string","element","nodeType","bool","number","defaultProps","PadView","setNativeProps","nativeProps","_root","current","React","createRef","childrens","Children","toArray","length","Container","map","child","index","paddingLeft","node","ThemedListItem","Chevron","ListItemChevron","Content","ListItemContent","Input","ListItemInput","Title","Subtitle","CheckBox","ListItemCheckBox","ButtonGroup","ListItemButtonGroup"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Platform,\n  StyleSheet,\n  Switch,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nimport { renderNode, nodeType } from '../helpers';\nimport { withTheme } from '../config';\n\nimport Avatar from '../avatar/Avatar';\nimport Badge from '../badge/Badge';\nimport Icon from '../icons/Icon';\nimport Text from '../text/Text';\n\nimport ListItemContent from './ListItemContent';\nimport ListItemChevron from './ListItemChevron';\nimport ListItemInput from './ListItemInput';\nimport ListItemCheckBox from './ListItemCheckBox';\nimport ListItemButtonGroup from './ListItemButtonGroup';\nimport ListItemTitle from './ListItemTitle';\nimport ListItemSubtitle from './ListItemSubtitle';\n\nconst checkmarkDefaultProps = (theme) => ({\n  name: 'check',\n  size: 20,\n  color: theme.colors.primary,\n});\n\nconst renderAvatar = (content) =>\n  renderNode(Avatar, content, {\n    size: 40,\n    rounded: true,\n  });\n\nconst renderIcon = (content, theme) =>\n  renderNode(Icon, content, {\n    color: Platform.select(theme.colors.platform).grey,\n    size: 24,\n  });\n\nconst ListItem = (props) => {\n  const {\n    title,\n    titleStyle,\n    titleProps,\n    subtitle,\n    subtitleStyle,\n    subtitleProps,\n    containerStyle,\n    onPress,\n    onLongPress,\n    Component = onPress || onLongPress ? TouchableHighlight : View,\n    leftIcon,\n    leftAvatar,\n    leftElement,\n    rightIcon,\n    rightAvatar,\n    rightElement,\n    rightTitle,\n    rightTitleStyle,\n    rightTitleProps,\n    rightSubtitle,\n    rightSubtitleStyle,\n    rightSubtitleProps,\n    input,\n    buttonGroup,\n    switch: switchProps, // switch is a reserved keyword\n    checkBox,\n    badge,\n    chevron,\n    contentContainerStyle,\n    rightContentContainerStyle,\n    checkmark,\n    disabled,\n    disabledStyle,\n    bottomDivider,\n    topDivider,\n    pad,\n    linearGradientProps,\n    ViewComponent = linearGradientProps && global.Expo\n      ? global.Expo.LinearGradient\n      : View,\n    theme,\n    children,\n    ...attributes\n  } = props;\n\n  if (title) {\n    console.warn(\n      \"'ListItem.title' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (titleStyle) {\n    console.warn(\n      \"'ListItem.titleStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (titleProps) {\n    console.warn(\n      \"'ListItem.titleProps' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (subtitle) {\n    console.warn(\n      \"'ListItem.subtitle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (subtitleStyle) {\n    console.warn(\n      \"'ListItem.subtitleStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (subtitleProps) {\n    console.warn(\n      \"'ListItem.subtitleProps' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (leftIcon) {\n    console.warn(\n      \"'ListItem.leftIcon' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (leftAvatar) {\n    console.warn(\n      \"'ListItem.leftAvatar' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (leftElement) {\n    console.warn(\n      \"'ListItem.leftElement' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightTitle) {\n    console.warn(\n      \"'ListItem.rightTitle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightTitleStyle) {\n    console.warn(\n      \"'ListItem.rightTitleStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightTitleProps) {\n    console.warn(\n      \"'ListItem.rightTitleProps' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightSubtitle) {\n    console.warn(\n      \"'ListItem.rightSubtitle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightSubtitleStyle) {\n    console.warn(\n      \"'ListItem.rightSubtitleStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightSubtitleProps) {\n    console.warn(\n      \"'ListItem.rightSubtitleProps' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (input) {\n    console.warn(\n      \"'ListItem.input' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (buttonGroup) {\n    console.warn(\n      \"'ListItem.buttonGroup' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (switchProps) {\n    console.warn(\n      \"'ListItem.switch' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (checkBox) {\n    console.warn(\n      \"'ListItem.checkBox' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (badge) {\n    console.warn(\n      \"'ListItem.badge' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (chevron) {\n    console.warn(\n      \"'ListItem.chevron' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (contentContainerStyle) {\n    console.warn(\n      \"'ListItem.contentContainerStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (rightContentContainerStyle) {\n    console.warn(\n      \"'ListItem.rightContentContainerStyle' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (checkmark) {\n    console.warn(\n      \"'ListItem.checkmark' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n\n  return (\n    <Component\n      {...attributes}\n      onPress={onPress}\n      onLongPress={onLongPress}\n      disabled={disabled}\n    >\n      <PadView\n        Component={ViewComponent}\n        {...linearGradientProps}\n        style={StyleSheet.flatten([\n          styles.container(theme),\n          (buttonGroup || switchProps) && { paddingVertical: 8 },\n          topDivider && { borderTopWidth: StyleSheet.hairlineWidth },\n          bottomDivider && { borderBottomWidth: StyleSheet.hairlineWidth },\n          containerStyle,\n          disabled && disabledStyle,\n        ])}\n        pad={pad}\n      >\n        {renderNode(Text, leftElement)}\n        {renderIcon(leftIcon, theme)}\n        {renderAvatar(leftAvatar)}\n\n        {(!!title || !!subtitle) && (\n          <ListItemContent style={contentContainerStyle}>\n            {title &&\n              renderNode(ListItemTitle, title, {\n                style: titleStyle,\n                ...titleProps,\n              })}\n            {subtitle &&\n              renderNode(ListItemSubtitle, subtitle, {\n                style: subtitleStyle,\n                ...subtitleProps,\n              })}\n          </ListItemContent>\n        )}\n\n        {(!!rightTitle || !!rightSubtitle) && (\n          <ListItemContent right style={rightContentContainerStyle}>\n            {rightTitle &&\n              renderNode(ListItemTitle, rightTitle, {\n                right: true,\n                style: rightTitleStyle,\n                ...rightTitleProps,\n              })}\n            {rightSubtitle &&\n              renderNode(ListItemSubtitle, rightSubtitle, {\n                right: true,\n                style: rightSubtitleStyle,\n                ...rightSubtitleProps,\n              })}\n          </ListItemContent>\n        )}\n\n        {input && <ListItemInput {...input} />}\n        {switchProps && <Switch {...switchProps} />}\n        {checkBox && <ListItemCheckBox {...checkBox} />}\n        {badge && <Badge {...badge} />}\n        {buttonGroup && <ListItemButtonGroup {...buttonGroup} />}\n        {renderAvatar(rightAvatar)}\n        {renderIcon(rightIcon, theme)}\n        {renderNode(Text, rightElement)}\n        {renderNode(Icon, checkmark, checkmarkDefaultProps(theme))}\n        {chevron && <ListItemChevron />}\n        {children}\n      </PadView>\n    </Component>\n  );\n};\n\nconst styles = {\n  container: (theme) => ({\n    ...Platform.select({\n      ios: {\n        padding: 14,\n      },\n      default: {\n        padding: 16,\n      },\n    }),\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: theme.colors.white,\n    borderColor: theme.colors.divider,\n  }),\n};\n\nListItem.propTypes = {\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  contentContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  rightContentContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  Component: PropTypes.elementType,\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  titleProps: PropTypes.object,\n  subtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  subtitleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  subtitleProps: PropTypes.object,\n  leftIcon: nodeType,\n  leftAvatar: nodeType,\n  leftElement: nodeType,\n  rightIcon: nodeType,\n  rightAvatar: nodeType,\n  rightElement: nodeType,\n  rightTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightTitleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rightTitleProps: PropTypes.object,\n  rightSubtitle: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  rightSubtitleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rightSubtitleProps: PropTypes.object,\n  input: PropTypes.object,\n  buttonGroup: PropTypes.object,\n  switch: PropTypes.object,\n  checkBox: PropTypes.object,\n  badge: PropTypes.object,\n  chevron: nodeType,\n  checkmark: nodeType,\n  disabled: PropTypes.bool,\n  disabledStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  topDivider: PropTypes.bool,\n  bottomDivider: PropTypes.bool,\n  pad: PropTypes.number,\n  linearGradientProps: PropTypes.object,\n  ViewComponent: PropTypes.elementType,\n  theme: PropTypes.object,\n};\n\nListItem.defaultProps = {\n  pad: 16,\n  title: '',\n};\n\nclass PadView extends React.Component {\n  constructor(props) {\n    super(props);\n    this._root = React.createRef();\n  }\n\n  setNativeProps = (nativeProps) => {\n    this._root.current.setNativeProps(nativeProps);\n  };\n\n  render() {\n    const { children, pad, Component, ...props } = this.props;\n    const childrens = React.Children.toArray(children);\n    const { length } = childrens;\n    const Container = Component || View;\n    return (\n      <Container {...props} ref={this._root} testID=\"padView\">\n        {React.Children.map(\n          childrens,\n          (child, index) =>\n            child && [\n              child,\n              index !== length - 1 && <View style={{ paddingLeft: pad }} />,\n            ]\n        )}\n      </Container>\n    );\n  }\n}\n\nPadView.propTypes = {\n  children: PropTypes.node,\n  pad: PropTypes.number,\n  Component: PropTypes.elementType,\n};\n\nexport { ListItem };\n\nconst ThemedListItem = withTheme(ListItem, 'ListItem');\nThemedListItem.Chevron = ListItemChevron;\nThemedListItem.Content = ListItemContent;\nThemedListItem.Input = ListItemInput;\nThemedListItem.Title = ListItemTitle;\nThemedListItem.Subtitle = ListItemSubtitle;\nThemedListItem.CheckBox = ListItemCheckBox;\nThemedListItem.ButtonGroup = ListItemButtonGroup;\nexport default ThemedListItem;\n"]},"metadata":{},"sourceType":"script"}