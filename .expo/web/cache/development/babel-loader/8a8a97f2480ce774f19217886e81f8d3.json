{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\node_modules\\\\react-native-simple-dialogs\\\\src\\\\TouchableEffect.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar OS = _reactNative.Platform.OS;\n\nvar TouchableEffect = function (_Component) {\n  (0, _inherits2.default)(TouchableEffect, _Component);\n\n  var _super = _createSuper(TouchableEffect);\n\n  function TouchableEffect() {\n    (0, _classCallCheck2.default)(this, TouchableEffect);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(TouchableEffect, [{\n    key: \"render\",\n    value: function render() {\n      var touchable;\n\n      if (OS === 'android') {\n        touchable = _react.default.createElement(_reactNative.TouchableNativeFeedback, (0, _extends2.default)({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }\n        }));\n      } else {\n        touchable = _react.default.createElement(_reactNative.TouchableOpacity, (0, _extends2.default)({}, this.props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }\n        }));\n      }\n\n      return touchable;\n    }\n  }]);\n  return TouchableEffect;\n}(_react.Component);\n\nif (OS === 'android') {\n  TouchableEffect.propTypes = _objectSpread({}, _reactNative.TouchableNativeFeedback.propTypes);\n} else {\n  TouchableEffect.propTypes = _objectSpread({}, _reactNative.TouchableOpacity.propTypes);\n}\n\nTouchableEffect.defaultProps = {\n  background: OS === 'android' ? _reactNative.TouchableNativeFeedback.SelectableBackground() : undefined\n};\nvar _default = TouchableEffect;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/node_modules/react-native-simple-dialogs/src/TouchableEffect.js"],"names":["OS","Platform","TouchableEffect","touchable","props","Component","propTypes","TouchableNativeFeedback","TouchableOpacity","defaultProps","background","SelectableBackground","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA;;AACA;;;;;;;;;;;;IAMQA,E,GAAOC,qB,CAAPD,E;;IAEFE,e;;;;;;;;;;;;6BAEO;AACL,UAAIC,SAAJ;;AAEA,UAAIH,EAAE,KAAK,SAAX,EAAsB;AAClBG,QAAAA,SAAS,GAAG,6BAAC,oCAAD,6BAA6B,KAAKC,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACH,OAFD,MAEO;AACHD,QAAAA,SAAS,GAAG,6BAAC,6BAAD,6BAAsB,KAAKC,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AACH;;AAED,aAAOD,SAAP;AACH;;;EAZyBE,gB;;AAe9B,IAAIL,EAAE,KAAK,SAAX,EAAsB;AAClBE,EAAAA,eAAe,CAACI,SAAhB,qBAAiCC,qCAAwBD,SAAzD;AACH,CAFD,MAEO;AACHJ,EAAAA,eAAe,CAACI,SAAhB,qBAAiCE,8BAAiBF,SAAlD;AACH;;AAEDJ,eAAe,CAACO,YAAhB,GAA+B;AAC3BC,EAAAA,UAAU,EAAEV,EAAE,KAAK,SAAP,GAAmBO,qCAAwBI,oBAAxB,EAAnB,GAAoEC;AADrD,CAA/B;eAIeV,e","sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Platform,\n    TouchableOpacity,\n    TouchableNativeFeedback,\n} from 'react-native'\n\nconst { OS } = Platform;\n\nclass TouchableEffect extends Component {\n\n    render() {\n        let touchable;\n\n        if (OS === 'android') {\n            touchable = <TouchableNativeFeedback {...this.props} />\n        } else {\n            touchable = <TouchableOpacity {...this.props} />\n        }\n\n        return touchable;\n    }\n}\n\nif (OS === 'android') {\n    TouchableEffect.propTypes = { ...TouchableNativeFeedback.propTypes };\n} else {\n    TouchableEffect.propTypes = { ...TouchableOpacity.propTypes };\n}\n\nTouchableEffect.defaultProps = {\n    background: OS === 'android' ? TouchableNativeFeedback.SelectableBackground() : undefined\n};\n\nexport default TouchableEffect"]},"metadata":{},"sourceType":"script"}