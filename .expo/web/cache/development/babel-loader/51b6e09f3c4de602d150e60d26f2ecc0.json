{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _images = require(\"../../common/images\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _button = _interopRequireDefault(require(\"../../components/button\"));\n\nvar _reactNativeLinearGradient = _interopRequireDefault(require(\"react-native-linear-gradient\"));\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _colors = require(\"../../common/colors\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _reactNativeSnapCarousel = _interopRequireWildcard(require(\"react-native-snap-carousel\"));\n\nvar _reactNativeResponsiveImage = _interopRequireDefault(require(\"react-native-responsive-image\"));\n\nvar _native2 = require(\"@react-navigation/native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _nativeBase = require(\"native-base\");\n\nvar _reactNativeKeyboardAwareScrollview = require(\"react-native-keyboard-aware-scrollview\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\src\\\\Screens\\\\signup\\\\signup.js\";\n\nvar Signup = function Signup() {\n  var _useState = (0, _react.useState)(0),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      Tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var navigation = (0, _native2.useNavigation)();\n  var data = [{\n    image: _images.signupslider1\n  }, {\n    image: _images.signupslider2\n  }, {\n    image: _images.signupslider1\n  }];\n\n  var _renderItemWithParallax = function _renderItemWithParallax(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _react.default.createElement(_reactNative.View, {\n      style: [styles.slide],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: item.image,\n      initHeight: \"180\",\n      initWidth: \"400\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  var _renderDots = function _renderDots(activeIndex, total, context) {\n    console.log(total, 'total', activeIndex);\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.FlatList, {\n      data: data,\n      horizontal: true,\n      renderItem: function renderItem(_ref2) {\n        var item = _ref2.item,\n            index = _ref2.index;\n        var value = index === activeIndex ? [_colors.LightPink, _colors.Purple] : ['rgba(255,0,0,0)', 'rgba(255,0,0,0)'];\n        return _react.default.createElement(_reactNativeLinearGradient.default, {\n          style: index === activeIndex ? {\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            marginLeft: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(0.5)\n          } : {\n            borderColor: 'lightgray',\n            borderWidth: 1,\n            height: 10,\n            width: 10,\n            borderRadius: 10,\n            marginLeft: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(0.5)\n          },\n          colors: value,\n          start: {\n            x: 0.1,\n            y: 0.5\n          },\n          end: {\n            x: 0.5,\n            y: 0.1\n          },\n          locations: [0.1, 0.9],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return _react.default.createElement(_reactNativeKeyboardAwareScrollview.KeyboardAwareScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(BackgroundImage, {\n    source: _images.signupsec,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: {\n      justifyContent: 'center',\n      marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(7),\n      fontFamily: 'Futura-Medium'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(Top, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"WELCOME TO YBH \")), _react.default.createElement(TopSec, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeSnapCarousel.default, {\n    autoplay: true,\n    loop: true,\n    data: data,\n    renderItem: _renderItemWithParallax,\n    sliderWidth: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(100),\n    itemWidth: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(100),\n    hasParallaxImages: true,\n    inactiveSlideScale: 0.94,\n    containerCustomStyle: styles.slider,\n    onSnapToItem: function onSnapToItem(index) {\n      return setTab(index);\n    },\n    layout: 'default',\n    layoutCardOffset: '10',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNativeSnapCarousel.Pagination, {\n    dotsLength: data.length,\n    activeDotIndex: Tab,\n    renderDots: _renderDots,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(TextInputView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.Input, {\n    placeholder: 'USER NAME',\n    placeholderTextColor: \"#484848\",\n    style: {\n      fontFamily: 'Futura-Medium'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(TextInputView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.Input, {\n    placeholder: 'EMAIL',\n    placeholderTextColor: \"#484848\",\n    keyboardType: 'email-address',\n    style: {\n      fontFamily: 'Futura-Medium'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(EmailVerText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"Make sure is a valid email because we will be sending verification link.\"), _react.default.createElement(TextInputView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_nativeBase.Input, {\n    placeholder: 'PASSWORD',\n    secureTextEntry: true,\n    placeholderTextColor: \"#484848\",\n    style: {\n      fontFamily: 'FuturaPT-Medium'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })), _react.default.createElement(_button.default, {\n    style: {\n      width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(78),\n      marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(4),\n      alignSelf: 'center'\n    },\n    name: 'Sign up',\n    linear: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(AlreadyAccountText, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Already have an account?\", ' ', _react.default.createElement(AlreadyAccountText, {\n    style: {\n      textDecorationLine: 'underline',\n      fontFamily: 'FuturaPT-Light',\n      color: '#484848'\n    },\n    onPress: function onPress() {\n      navigation.navigate('Login');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, \"Sign in\"))));\n};\n\nvar BackgroundImage = (0, _native.default)(_reactNative.ImageBackground)({\n  flex: 1,\n  alignItems: 'center'\n});\nvar Top = (0, _native.default)(_reactNative.Text)({\n  textAlign: 'center',\n  fontSize: 25,\n  fontWeight: '400',\n  color: '#ffffff',\n  fontFamily: 'Futura-Medium'\n});\n\nvar TopSec = _native.default.View({\n  alignItems: 'center'\n});\n\nvar TextInputView = (0, _native.default)(_nativeBase.Item)({\n  width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(78),\n  alignSelf: 'center',\n  borderWidth: 2,\n  borderColor: '#000',\n  marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(1)\n});\n\nvar EmailVerText = _native.default.Text({\n  fontSize: 12,\n  marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(1),\n  color: '#484848',\n  textAlign: 'center',\n  fontFamily: 'FuturaPT-Light',\n  width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(80)\n});\n\nvar AlreadyAccountText = _native.default.Text({\n  color: '#484848',\n  fontSize: 16,\n  textAlign: 'center',\n  marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(0.5),\n  fontFamily: 'FuturaPT-Light'\n});\n\nvar styles = _reactNative.StyleSheet.create({\n  slider: {\n    flexGrow: 0\n  },\n  slide: {\n    alignItems: 'center',\n    marginTop: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(6)\n  },\n  dotContainerStyle: {\n    marginTop: -(0, _reactNativeResponsiveScreen.heightPercentageToDP)(2),\n    width: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(2)\n  },\n  activeDotStyle: {\n    width: 10,\n    height: 10,\n    borderRadius: 10,\n    backgroundColor: _colors.LightPink\n  },\n  InactiveDotStyle: {\n    width: 10,\n    height: 10,\n    borderRadius: 10,\n    backgroundColor: 'transparent',\n    borderWidth: 1,\n    borderColor: _colors.LightPink\n  }\n});\n\nvar _default = Signup;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/src/Screens/signup/signup.js"],"names":["Signup","Tab","setTab","navigation","data","image","signupslider1","signupslider2","_renderItemWithParallax","item","index","styles","slide","_renderDots","activeIndex","total","context","console","log","justifyContent","alignItems","value","LightPink","Purple","height","width","borderRadius","marginLeft","borderColor","borderWidth","x","y","flexGrow","signupsec","marginTop","fontFamily","slider","length","alignSelf","textDecorationLine","color","navigate","BackgroundImage","ImageBackground","flex","Top","Text","textAlign","fontSize","fontWeight","TopSec","styled","View","TextInputView","Item","EmailVerText","AlreadyAccountText","StyleSheet","create","dotContainerStyle","activeDotStyle","backgroundColor","InactiveDotStyle"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {Text, StyleSheet, View, ImageBackground, FlatList} from 'react-native';\r\nimport {signupslider1, signupslider2} from '../../common/images';\r\nimport styled from 'styled-components/native';\r\nimport Button from '../../components/button';\r\nimport LinearGradient from 'react-native-linear-gradient';\r\nimport {\r\n  heightPercentageToDP as hp,\r\n  widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport {White} from '../../common/colors';\r\nimport {LightPink} from '../../common/colors';\r\nimport {Yellow} from '../../common/colors';\r\nimport {Purple} from '../../common/colors';\r\nimport {SafeAreaView} from 'react-native-safe-area-context';\r\nimport Carousel, {Pagination} from 'react-native-snap-carousel';\r\nimport ResponsiveImage from 'react-native-responsive-image';\r\nimport {useNavigation} from '@react-navigation/native';\r\nimport {signupsec} from '../../common/images';\r\nimport {TextInput, ScrollView} from 'react-native-gesture-handler';\r\nimport {Input, Item, Label} from 'native-base';\r\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scrollview';\r\nconst Signup = () => {\r\n  const [Tab, setTab] = useState(0);\r\n  const navigation = useNavigation();\r\n  const data = [\r\n    {\r\n      image: signupslider1,\r\n    },\r\n    {\r\n      image: signupslider2,\r\n    },\r\n    {\r\n      image: signupslider1,\r\n    },\r\n  ];\r\n  const _renderItemWithParallax = ({item, index}) => {\r\n    return (\r\n      <View style={[styles.slide]}>\r\n        <ResponsiveImage source={item.image} initHeight=\"180\" initWidth=\"400\" />\r\n      </View>\r\n    );\r\n  };\r\n  const _renderDots = (activeIndex, total, context) => {\r\n    console.log(total, 'total', activeIndex);\r\n    return (\r\n      <View style={{justifyContent: 'center', alignItems: 'center'}}>\r\n        <FlatList\r\n          data={data}\r\n          horizontal\r\n          renderItem={({item, index}) => {\r\n            const value =\r\n              index === activeIndex\r\n                ? [LightPink, Purple]\r\n                : ['rgba(255,0,0,0)', 'rgba(255,0,0,0)'];\r\n            return (\r\n              <LinearGradient\r\n                style={\r\n                  index === activeIndex\r\n                    ? {\r\n                        height: 10,\r\n                        width: 10,\r\n                        borderRadius: 10,\r\n                        marginLeft: wp(0.5),\r\n                      }\r\n                    : {\r\n                        borderColor: 'lightgray',\r\n                        borderWidth: 1,\r\n                        height: 10,\r\n                        width: 10,\r\n                        borderRadius: 10,\r\n                        marginLeft: wp(0.5),\r\n                      }\r\n                }\r\n                colors={value}\r\n                start={{x: 0.1, y: 0.5}}\r\n                end={{x: 0.5, y: 0.1}}\r\n                locations={[0.1, 0.9]}\r\n              />\r\n            );\r\n          }}\r\n        />\r\n      </View>\r\n    );\r\n  };\r\n  return (\r\n    <KeyboardAwareScrollView contentContainerStyle={{flexGrow: 1}}>\r\n      {/* <ScrollView> */}\r\n      <BackgroundImage source={signupsec}>\r\n        <View\r\n          style={{\r\n            justifyContent: 'center',\r\n            marginTop: hp(7),\r\n            fontFamily: 'Futura-Medium',\r\n          }}>\r\n          <Top>WELCOME TO YBH </Top>\r\n        </View>\r\n        <TopSec>\r\n          <Carousel\r\n            autoplay\r\n            loop\r\n            data={data}\r\n            renderItem={_renderItemWithParallax}\r\n            sliderWidth={wp(100)}\r\n            itemWidth={wp(100)}\r\n            hasParallaxImages={true}\r\n            inactiveSlideScale={0.94}\r\n            containerCustomStyle={styles.slider}\r\n            onSnapToItem={(index) => setTab(index)}\r\n            layout={'default'}\r\n            layoutCardOffset={'10'}\r\n          />\r\n          <Pagination\r\n            dotsLength={data.length}\r\n            activeDotIndex={Tab}\r\n            // containerStyle={styles.dotContainerStyle}\r\n            // dotStyle={styles.activeDotStyle}\r\n            // inactiveDotStyle={styles.InactiveDotStyle}\r\n            // inactiveDotOpacity={1}\r\n            // inactiveDotScale={0.6}\r\n            renderDots={_renderDots}\r\n          />\r\n        </TopSec>\r\n\r\n        <TextInputView>\r\n          <Input\r\n            placeholder={'USER NAME'}\r\n            placeholderTextColor=\"#484848\"\r\n            style={{fontFamily: 'Futura-Medium'}}\r\n          />\r\n        </TextInputView>\r\n        <TextInputView>\r\n          <Input\r\n            placeholder={'EMAIL'}\r\n            placeholderTextColor=\"#484848\"\r\n            keyboardType={'email-address'}\r\n            style={{fontFamily: 'Futura-Medium'}}\r\n          />\r\n        </TextInputView>\r\n        <EmailVerText>\r\n          Make sure is a valid email because we will be sending verification\r\n          link.\r\n        </EmailVerText>\r\n        <TextInputView>\r\n          <Input\r\n            placeholder={'PASSWORD'}\r\n            secureTextEntry={true}\r\n            placeholderTextColor=\"#484848\"\r\n            style={{fontFamily: 'FuturaPT-Medium'}}\r\n          />\r\n        </TextInputView>\r\n        <Button\r\n          style={{width: wp(78), marginTop: hp(4), alignSelf: 'center'}}\r\n          name={'Sign up'}\r\n          linear\r\n        />\r\n        <AlreadyAccountText>\r\n          Already have an account?{' '}\r\n          <AlreadyAccountText\r\n            style={{\r\n              textDecorationLine: 'underline',\r\n              fontFamily: 'FuturaPT-Light',\r\n              color: '#484848',\r\n            }}\r\n            onPress={() => {\r\n              navigation.navigate('Login');\r\n            }}>\r\n            Sign in\r\n          </AlreadyAccountText>\r\n        </AlreadyAccountText>\r\n      </BackgroundImage>\r\n      {/* </ScrollView> */}\r\n    </KeyboardAwareScrollView>\r\n  );\r\n};\r\nconst BackgroundImage = styled(ImageBackground)({\r\n  flex: 1,\r\n  // height: wp(150),\r\n  alignItems: 'center',\r\n});\r\nconst Top = styled(Text)({\r\n  textAlign: 'center',\r\n  fontSize: 25,\r\n  fontWeight: '400',\r\n  color: '#ffffff',\r\n  fontFamily: 'Futura-Medium',\r\n});\r\nconst TopSec = styled.View({\r\n  // flex: 1,\r\n  // justifyContent: 'center',\r\n  alignItems: 'center',\r\n});\r\nconst TextInputView = styled(Item)({\r\n  width: wp(78),\r\n  alignSelf: 'center',\r\n  borderWidth: 2,\r\n  borderColor: '#000',\r\n  marginTop: hp(1),\r\n});\r\nconst EmailVerText = styled.Text({\r\n  fontSize: 12,\r\n  marginTop: hp(1),\r\n  color: '#484848',\r\n  textAlign: 'center',\r\n  fontFamily: 'FuturaPT-Light',\r\n  width: wp(80),\r\n  // backgroundColor: 'red',\r\n});\r\nconst AlreadyAccountText = styled.Text({\r\n  color: '#484848',\r\n  fontSize: 16,\r\n  textAlign: 'center',\r\n  marginTop: hp(0.5),\r\n  fontFamily: 'FuturaPT-Light',\r\n});\r\nconst styles = StyleSheet.create({\r\n  slider: {\r\n    flexGrow: 0,\r\n  },\r\n  slide: {\r\n    alignItems: 'center',\r\n    marginTop: hp(6),\r\n  },\r\n\r\n  dotContainerStyle: {\r\n    marginTop: -hp(2),\r\n    width: wp(2),\r\n  },\r\n\r\n  activeDotStyle: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 10,\r\n    backgroundColor: LightPink,\r\n  },\r\n  InactiveDotStyle: {\r\n    width: 10,\r\n    height: 10,\r\n    borderRadius: 10,\r\n    backgroundColor: 'transparent',\r\n    borderWidth: 1,\r\n    borderColor: LightPink,\r\n  },\r\n});\r\nexport default Signup;\r\n"]},"metadata":{},"sourceType":"script"}