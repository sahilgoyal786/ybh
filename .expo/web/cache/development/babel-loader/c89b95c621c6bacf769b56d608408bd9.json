{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\node_modules\\\\react-native-simple-dialogs\\\\src\\\\Dialog.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar OS = _reactNative.Platform.OS;\n\nvar Dialog = function (_Component) {\n  (0, _inherits2.default)(Dialog, _Component);\n\n  var _super = _createSuper(Dialog);\n\n  function Dialog() {\n    (0, _classCallCheck2.default)(this, Dialog);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(Dialog, [{\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          contentStyle = _this$props.contentStyle;\n      return _react.default.createElement(_reactNative.View, {\n        style: [{\n          width: '100%',\n          padding: 24,\n          paddingTop: 20\n        }, contentStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, children);\n    }\n  }, {\n    key: \"renderTitle\",\n    value: function renderTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          titleStyle = _this$props2.titleStyle;\n      var textAlign = OS === 'ios' ? \"center\" : null;\n      if (title) return _react.default.createElement(_reactNative.Text, {\n        style: [{\n          textAlign: textAlign,\n          color: \"#000000DD\",\n          fontSize: 20,\n          margin: 24,\n          marginBottom: 0\n        }, titleStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, title);\n    }\n  }, {\n    key: \"renderButtons\",\n    value: function renderButtons() {\n      var _this$props3 = this.props,\n          buttons = _this$props3.buttons,\n          buttonsStyle = _this$props3.buttonsStyle;\n      var containerStyle = OS === 'ios' ? {} : {\n        width: '100%',\n        paddingLeft: 24,\n        paddingRight: 8,\n        paddingTop: 8,\n        paddingBottom: 8\n      };\n      if (buttons) return _react.default.createElement(_reactNative.View, {\n        style: [containerStyle, buttonsStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, buttons);\n    }\n  }, {\n    key: \"_renderOutsideTouchable\",\n    value: function _renderOutsideTouchable(onTouch) {\n      var view = _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }\n      });\n\n      if (!onTouch) return view;\n      return _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: onTouch,\n        style: {\n          flex: 1,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }, view);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          dialogStyle = _this$props4.dialogStyle,\n          visible = _this$props4.visible,\n          animationType = _this$props4.animationType,\n          onRequestClose = _this$props4.onRequestClose,\n          onShow = _this$props4.onShow,\n          onOrientationChange = _this$props4.onOrientationChange,\n          onTouchOutside = _this$props4.onTouchOutside,\n          overlayStyle = _this$props4.overlayStyle,\n          supportedOrientations = _this$props4.supportedOrientations,\n          keyboardDismissMode = _this$props4.keyboardDismissMode,\n          keyboardShouldPersistTaps = _this$props4.keyboardShouldPersistTaps;\n      var dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n      var dialogBorderRadius = OS === 'ios' ? 5 : 1;\n      return _react.default.createElement(_reactNative.Modal, {\n        animationType: animationType,\n        transparent: true,\n        visible: visible,\n        onRequestClose: onRequestClose,\n        onShow: onShow,\n        onOrientationChange: onOrientationChange,\n        supportedOrientations: supportedOrientations,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        bounces: false,\n        style: {\n          flex: 1\n        },\n        contentContainerStyle: {\n          flex: 1\n        },\n        keyboardDismissMode: keyboardDismissMode,\n        keyboardShouldPersistTaps: keyboardShouldPersistTaps,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [{\n          flex: 1,\n          backgroundColor: \"#000000AA\",\n          padding: 24\n        }, overlayStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, this._renderOutsideTouchable(onTouchOutside), _react.default.createElement(_reactNative.View, {\n        style: [{\n          backgroundColor: dialogBackgroundColor,\n          width: '100%',\n          shadowOpacity: 0.24,\n          borderRadius: dialogBorderRadius,\n          elevation: 4,\n          shadowOffset: {\n            height: 4,\n            width: 2\n          }\n        }, dialogStyle],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, this.renderTitle(), this.renderContent(), this.renderButtons()), this._renderOutsideTouchable(onTouchOutside))));\n    }\n  }]);\n  return Dialog;\n}(_react.Component);\n\nDialog.propTypes = {\n  dialogStyle: _reactNative.ViewPropTypes.style,\n  contentStyle: _reactNative.ViewPropTypes.style,\n  buttonsStyle: _reactNative.ViewPropTypes.style,\n  overlayStyle: _reactNative.ViewPropTypes.style,\n  buttons: _propTypes.default.element,\n  visible: _propTypes.default.bool,\n  onRequestClose: _propTypes.default.func,\n  onShow: _propTypes.default.func,\n  onTouchOutside: _propTypes.default.func,\n  title: _propTypes.default.string,\n  titleStyle: _reactNative.Text.propTypes.style,\n  keyboardDismissMode: _propTypes.default.string,\n  keyboardShouldPersistTaps: _propTypes.default.string\n};\nDialog.defaultProps = {\n  visible: false,\n  onRequestClose: function onRequestClose() {\n    return null;\n  }\n};\nvar _default = Dialog;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/node_modules/react-native-simple-dialogs/src/Dialog.js"],"names":["OS","Platform","Dialog","props","children","contentStyle","width","padding","paddingTop","title","titleStyle","textAlign","color","fontSize","margin","marginBottom","buttons","buttonsStyle","containerStyle","paddingLeft","paddingRight","paddingBottom","onTouch","view","flex","dialogStyle","visible","animationType","onRequestClose","onShow","onOrientationChange","onTouchOutside","overlayStyle","supportedOrientations","keyboardDismissMode","keyboardShouldPersistTaps","dialogBackgroundColor","dialogBorderRadius","backgroundColor","_renderOutsideTouchable","shadowOpacity","borderRadius","elevation","shadowOffset","height","renderTitle","renderContent","renderButtons","Component","propTypes","ViewPropTypes","style","PropTypes","element","bool","func","string","Text","defaultProps"],"mappings":"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","sourcesContent":["/**\n* MIT License\n* \n* Copyright (c) 2017 Douglas Nassif Roma Junior\n* \n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n* \n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n* \n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE. \n*/\n\nimport React, { Component } from 'react'\nimport {\n    Modal,\n    View,\n    ViewPropTypes,\n    TouchableWithoutFeedback,\n    Text,\n    Platform,\n    ScrollView\n} from 'react-native'\nconst { OS } = Platform;\n\nimport PropTypes from 'prop-types';\n\nclass Dialog extends Component {\n\n    renderContent() {\n        const { children, contentStyle } = this.props;\n\n        return (\n            <View style={[{\n                width: '100%',\n                padding: 24,\n                paddingTop: 20\n            }, contentStyle]}>\n                {children}\n            </View>\n        )\n    }\n\n    renderTitle() {\n        const { title, titleStyle } = this.props;\n\n        const textAlign = OS === 'ios' ? \"center\" : null;\n\n        if (title)\n            return (\n                <Text style={[{\n                    textAlign,\n                    color: \"#000000DD\",\n                    fontSize: 20,\n                    margin: 24,\n                    marginBottom: 0\n                }, titleStyle]}>\n                    {title}\n                </Text>\n            )\n    }\n\n    renderButtons() {\n        const { buttons, buttonsStyle } = this.props;\n\n        const containerStyle = OS === 'ios' ?\n            {} :\n            {\n                width: '100%',\n                paddingLeft: 24,\n                paddingRight: 8,\n                paddingTop: 8,\n                paddingBottom: 8\n            };\n\n        if (buttons)\n            return (\n                <View style={[containerStyle, buttonsStyle]}>\n                    {buttons}\n                </View>\n            )\n    }\n\n    _renderOutsideTouchable(onTouch) {\n        const view = <View style={{ flex: 1, width: '100%' }} />\n\n        if (!onTouch) return view;\n\n        return (\n            <TouchableWithoutFeedback onPress={onTouch} style={{ flex: 1, width: '100%' }}>\n                {view}\n            </TouchableWithoutFeedback>\n        )\n    }\n\n    render() {\n        const {\n            dialogStyle, visible, animationType, onRequestClose, onShow,\n            onOrientationChange, onTouchOutside, overlayStyle, supportedOrientations,\n            keyboardDismissMode, keyboardShouldPersistTaps,\n        } = this.props;\n\n        const dialogBackgroundColor = OS === 'ios' ? \"#e8e8e8\" : \"#ffffff\";\n        const dialogBorderRadius = OS === 'ios' ? 5 : 1;\n\n        return (\n            <Modal\n                animationType={animationType}\n                transparent={true}\n                visible={visible}\n                onRequestClose={onRequestClose}\n                onShow={onShow}\n                onOrientationChange={onOrientationChange}\n                supportedOrientations={supportedOrientations}\n            >\n                <ScrollView\n                    bounces={false}\n                    style={{\n                        flex: 1,\n                    }}\n                    contentContainerStyle={{\n                        flex: 1,\n                    }}\n                    keyboardDismissMode={keyboardDismissMode}\n                    keyboardShouldPersistTaps={keyboardShouldPersistTaps}\n                >\n                    <View style={[{\n                        flex: 1,\n                        backgroundColor: \"#000000AA\",\n                        padding: 24\n                    }, overlayStyle]}>\n                        {this._renderOutsideTouchable(onTouchOutside)}\n\n                        <View style={[{\n                            backgroundColor: dialogBackgroundColor,\n                            width: '100%',\n                            shadowOpacity: 0.24,\n                            borderRadius: dialogBorderRadius,\n                            elevation: 4,\n                            shadowOffset: {\n                                height: 4,\n                                width: 2\n                            }\n                        }, dialogStyle]}>\n\n                            {this.renderTitle()}\n\n                            {this.renderContent()}\n\n                            {this.renderButtons()}\n\n                        </View>\n\n                        {this._renderOutsideTouchable(onTouchOutside)}\n                    </View>\n                </ScrollView>\n            </Modal>\n        )\n    }\n}\n\nDialog.propTypes = {\n    dialogStyle: ViewPropTypes.style,\n    contentStyle: ViewPropTypes.style,\n    buttonsStyle: ViewPropTypes.style,\n    overlayStyle: ViewPropTypes.style,\n    buttons: PropTypes.element,\n    visible: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    onShow: PropTypes.func,\n    onTouchOutside: PropTypes.func,\n    title: PropTypes.string,\n    titleStyle: Text.propTypes.style,\n    keyboardDismissMode: PropTypes.string,\n    keyboardShouldPersistTaps: PropTypes.string\n}\n\nDialog.defaultProps = {\n    visible: false,\n    onRequestClose: () => null\n};\n\nexport default Dialog;\n"]},"metadata":{},"sourceType":"script"}