{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Avatar = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _lodash = _interopRequireDefault(require(\"lodash.isequal\"));\n\nvar _config = require(\"../config\");\n\nvar _helpers = require(\"../helpers\");\n\nvar _Icon = _interopRequireDefault(require(\"../icons/Icon\"));\n\nvar _Image = _interopRequireDefault(require(\"../image/Image\"));\n\nvar _Accessory = _interopRequireDefault(require(\"./Accessory\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\node_modules\\\\react-native-elements\\\\src\\\\avatar\\\\Avatar.js\";\n\nvar avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150\n};\n\nvar AvatarComponent = function AvatarComponent(_ref) {\n  var onPress = _ref.onPress,\n      onLongPress = _ref.onLongPress,\n      _ref$Component = _ref.Component,\n      Component = _ref$Component === void 0 ? onPress || onLongPress ? _reactNative.TouchableOpacity : _reactNative.View : _ref$Component,\n      containerStyle = _ref.containerStyle,\n      icon = _ref.icon,\n      iconStyle = _ref.iconStyle,\n      source = _ref.source,\n      size = _ref.size,\n      avatarStyle = _ref.avatarStyle,\n      rounded = _ref.rounded,\n      title = _ref.title,\n      titleStyle = _ref.titleStyle,\n      overlayContainerStyle = _ref.overlayContainerStyle,\n      showAccessory = _ref.showAccessory,\n      accessory = _ref.accessory,\n      onAccessoryPress = _ref.onAccessoryPress,\n      imageProps = _ref.imageProps,\n      placeholderStyle = _ref.placeholderStyle,\n      renderPlaceholderContent = _ref.renderPlaceholderContent,\n      ImageComponent = _ref.ImageComponent,\n      children = _ref.children,\n      attributes = (0, _objectWithoutProperties2.default)(_ref, [\"onPress\", \"onLongPress\", \"Component\", \"containerStyle\", \"icon\", \"iconStyle\", \"source\", \"size\", \"avatarStyle\", \"rounded\", \"title\", \"titleStyle\", \"overlayContainerStyle\", \"showAccessory\", \"accessory\", \"onAccessoryPress\", \"imageProps\", \"placeholderStyle\", \"renderPlaceholderContent\", \"ImageComponent\", \"children\"]);\n\n  if (accessory) {\n    console.warn(\"'Avatar.accessory' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (showAccessory) {\n    console.warn(\"'Avatar.showAccessory' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  if (onAccessoryPress) {\n    console.warn(\"'Avatar.onAccessoryPress' prop has been deprecated and will be removed in the next version.\");\n  }\n\n  var width = typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  var height = width;\n  var titleSize = width / 2;\n  var iconSize = width / 2;\n  var accessorySize = accessory && accessory.size || width / 3;\n\n  var Utils = showAccessory && _react.default.createElement(_Accessory.default, (0, _extends2.default)({\n    size: accessorySize,\n    onPress: onAccessoryPress\n  }, accessory, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }));\n\n  var PlaceholderContent = renderPlaceholderContent && (0, _helpers.renderNode)(undefined, renderPlaceholderContent) || title && _react.default.createElement(_reactNative.Text, {\n    style: _reactNative.StyleSheet.flatten([styles.title, {\n      fontSize: titleSize\n    }, titleStyle]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, title) || icon && _react.default.createElement(_Icon.default, {\n    style: iconStyle && iconStyle,\n    color: icon.color || 'white',\n    name: icon.name || 'user',\n    size: icon.size || iconSize,\n    type: icon.type && icon.type,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  });\n\n  var hidePlaceholder = !source;\n\n  var imageContainerStyle = _reactNative.StyleSheet.flatten([styles.overlayContainer, rounded && {\n    borderRadius: width / 2,\n    overflow: 'hidden'\n  }, overlayContainerStyle, imageProps && imageProps.containerStyle]);\n\n  if (imageProps && imageProps.containerStyle) {\n    delete imageProps.containerStyle;\n  }\n\n  return _react.default.createElement(Component, (0, _extends2.default)({\n    onPress: onPress,\n    onLongPress: onLongPress,\n    style: _reactNative.StyleSheet.flatten([styles.container, {\n      height: height,\n      width: width\n    }, rounded && {\n      borderRadius: width / 2\n    }, containerStyle])\n  }, attributes, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }), _react.default.createElement(_Image.default, (0, _extends2.default)({\n    placeholderStyle: _reactNative.StyleSheet.flatten([placeholderStyle, hidePlaceholder && {\n      backgroundColor: 'transparent'\n    }]),\n    PlaceholderContent: PlaceholderContent,\n    containerStyle: imageContainerStyle,\n    source: source,\n    borderRadius: rounded ? width / 2 : undefined\n  }, imageProps, {\n    style: _reactNative.StyleSheet.flatten([styles.avatar, imageProps && imageProps.style, avatarStyle]),\n    ImageComponent: ImageComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  })), Utils, children);\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent'\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null\n  },\n  overlayContainer: {\n    flex: 1\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center'\n  }\n});\n\nAvatarComponent.propTypes = {\n  Component: _propTypes.default.oneOf([_reactNative.View, _reactNative.TouchableOpacity, _reactNative.TouchableHighlight, _reactNative.TouchableNativeFeedback, _reactNative.TouchableWithoutFeedback]),\n  onPress: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  containerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  source: _helpers.ImageSourceType,\n  avatarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  rounded: _propTypes.default.bool,\n  title: _propTypes.default.string,\n  titleStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  overlayContainerStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  activeOpacity: _propTypes.default.number,\n  icon: _propTypes.default.object,\n  iconStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  size: _propTypes.default.oneOfType([_propTypes.default.oneOf(['small', 'medium', 'large', 'xlarge']), _propTypes.default.number]),\n  showAccessory: _propTypes.default.bool,\n  onAccessoryPress: _propTypes.default.func,\n  accessory: _propTypes.default.shape({\n    size: _propTypes.default.number,\n    name: _propTypes.default.string,\n    type: _propTypes.default.string,\n    color: _propTypes.default.string,\n    underlayColor: _propTypes.default.string,\n    style: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array])\n  }),\n  placeholderStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.array]),\n  renderPlaceholderContent: _helpers.nodeType,\n  imageProps: _propTypes.default.object,\n  ImageComponent: _propTypes.default.elementType\n};\nAvatarComponent.defaultProps = {\n  showAccessory: false,\n  onAccessoryPress: null,\n  size: 'small',\n  ImageComponent: _reactNative.Image\n};\n\nvar Avatar = _react.default.memo(AvatarComponent, _lodash.default);\n\nexports.Avatar = Avatar;\nvar ThemedAvatar = (0, _config.withTheme)(Avatar, 'Avatar');\nThemedAvatar.Accessory = _Accessory.default;\nvar _default = ThemedAvatar;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/node_modules/react-native-elements/src/avatar/Avatar.js"],"names":["avatarSizes","small","medium","large","xlarge","AvatarComponent","onPress","onLongPress","Component","TouchableOpacity","View","containerStyle","icon","iconStyle","source","size","avatarStyle","rounded","title","titleStyle","overlayContainerStyle","showAccessory","accessory","onAccessoryPress","imageProps","placeholderStyle","renderPlaceholderContent","ImageComponent","children","attributes","console","warn","width","height","titleSize","iconSize","accessorySize","Utils","PlaceholderContent","undefined","StyleSheet","flatten","styles","fontSize","color","name","type","hidePlaceholder","imageContainerStyle","overlayContainer","borderRadius","overflow","container","backgroundColor","avatar","style","create","flex","textAlign","propTypes","PropTypes","oneOf","TouchableHighlight","TouchableNativeFeedback","TouchableWithoutFeedback","func","oneOfType","object","array","ImageSourceType","bool","string","activeOpacity","number","shape","underlayColor","nodeType","elementType","defaultProps","RNImage","Avatar","React","memo","isEqual","ThemedAvatar","Accessory"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  View,\n  Text,\n  Image as RNImage,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport isEqual from 'lodash.isequal';\n\nimport { withTheme } from '../config';\nimport { renderNode, nodeType, ImageSourceType } from '../helpers';\n\nimport Icon from '../icons/Icon';\nimport Image from '../image/Image';\nimport Accessory from './Accessory';\n\nconst avatarSizes = {\n  small: 34,\n  medium: 50,\n  large: 75,\n  xlarge: 150,\n};\n\nconst AvatarComponent = ({\n  onPress,\n  onLongPress,\n  Component = onPress || onLongPress ? TouchableOpacity : View,\n  containerStyle,\n  icon,\n  iconStyle,\n  source,\n  size,\n  avatarStyle,\n  rounded,\n  title,\n  titleStyle,\n  overlayContainerStyle,\n  showAccessory,\n  accessory,\n  onAccessoryPress,\n  imageProps,\n  placeholderStyle,\n  renderPlaceholderContent,\n  ImageComponent,\n  children,\n  ...attributes\n}) => {\n  if (accessory) {\n    console.warn(\n      \"'Avatar.accessory' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (showAccessory) {\n    console.warn(\n      \"'Avatar.showAccessory' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n  if (onAccessoryPress) {\n    console.warn(\n      \"'Avatar.onAccessoryPress' prop has been deprecated and will be removed in the next version.\"\n    );\n  }\n\n  const width =\n    typeof size === 'number' ? size : avatarSizes[size] || avatarSizes.small;\n  const height = width;\n  const titleSize = width / 2;\n  const iconSize = width / 2;\n\n  const accessorySize = (accessory && accessory.size) || width / 3;\n\n  const Utils = showAccessory && (\n    <Accessory size={accessorySize} onPress={onAccessoryPress} {...accessory} />\n  );\n\n  const PlaceholderContent =\n    (renderPlaceholderContent &&\n      renderNode(undefined, renderPlaceholderContent)) ||\n    (title && (\n      <Text\n        style={StyleSheet.flatten([\n          styles.title,\n          { fontSize: titleSize },\n          titleStyle,\n        ])}\n      >\n        {title}\n      </Text>\n    )) ||\n    (icon && (\n      <Icon\n        style={iconStyle && iconStyle}\n        color={icon.color || 'white'}\n        name={icon.name || 'user'}\n        size={icon.size || iconSize}\n        type={icon.type && icon.type}\n      />\n    ));\n\n  // Remove placeholder styling if we're not using image\n  const hidePlaceholder = !source;\n\n  // Merge image container style\n  const imageContainerStyle = StyleSheet.flatten([\n    styles.overlayContainer,\n    rounded && { borderRadius: width / 2, overflow: 'hidden' },\n    overlayContainerStyle,\n    imageProps && imageProps.containerStyle,\n  ]);\n\n  if (imageProps && imageProps.containerStyle) {\n    delete imageProps.containerStyle;\n  }\n\n  return (\n    <Component\n      onPress={onPress}\n      onLongPress={onLongPress}\n      style={StyleSheet.flatten([\n        styles.container,\n        { height, width },\n        rounded && { borderRadius: width / 2 },\n        containerStyle,\n      ])}\n      {...attributes}\n    >\n      <Image\n        placeholderStyle={StyleSheet.flatten([\n          placeholderStyle,\n          hidePlaceholder && { backgroundColor: 'transparent' },\n        ])}\n        PlaceholderContent={PlaceholderContent}\n        containerStyle={imageContainerStyle}\n        source={source}\n        borderRadius={rounded ? width / 2 : undefined}\n        {...imageProps}\n        style={StyleSheet.flatten([\n          styles.avatar,\n          imageProps && imageProps.style,\n          avatarStyle,\n        ])}\n        ImageComponent={ImageComponent}\n      />\n      {Utils}\n      {children}\n    </Component>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n  },\n  avatar: {\n    flex: 1,\n    width: null,\n    height: null,\n  },\n  overlayContainer: {\n    flex: 1,\n  },\n  title: {\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    textAlign: 'center',\n  },\n});\n\nAvatarComponent.propTypes = {\n  Component: PropTypes.oneOf([\n    View,\n    TouchableOpacity,\n    TouchableHighlight,\n    TouchableNativeFeedback,\n    TouchableWithoutFeedback,\n  ]),\n  onPress: PropTypes.func,\n  onLongPress: PropTypes.func,\n  containerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  source: ImageSourceType,\n  avatarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  rounded: PropTypes.bool,\n  title: PropTypes.string,\n  titleStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  overlayContainerStyle: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.array,\n  ]),\n  activeOpacity: PropTypes.number,\n  icon: PropTypes.object,\n  iconStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  size: PropTypes.oneOfType([\n    PropTypes.oneOf(['small', 'medium', 'large', 'xlarge']),\n    PropTypes.number,\n  ]),\n  showAccessory: PropTypes.bool,\n  onAccessoryPress: PropTypes.func,\n  accessory: PropTypes.shape({\n    size: PropTypes.number,\n    name: PropTypes.string,\n    type: PropTypes.string,\n    color: PropTypes.string,\n    underlayColor: PropTypes.string,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  }),\n  placeholderStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  renderPlaceholderContent: nodeType,\n  imageProps: PropTypes.object,\n  ImageComponent: PropTypes.elementType,\n};\n\nAvatarComponent.defaultProps = {\n  showAccessory: false,\n  onAccessoryPress: null,\n  size: 'small',\n  ImageComponent: RNImage,\n};\n\nconst Avatar = React.memo(AvatarComponent, isEqual);\nexport { Avatar };\nconst ThemedAvatar = withTheme(Avatar, 'Avatar');\n\nThemedAvatar.Accessory = Accessory;\n\nexport default ThemedAvatar;\n"]},"metadata":{},"sourceType":"script"}