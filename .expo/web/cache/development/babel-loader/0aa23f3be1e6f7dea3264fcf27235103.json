{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeResponsiveScreen = require(\"react-native-responsive-screen\");\n\nvar _images = require(\"../common/images\");\n\nvar _reactNativeResponsiveImage = _interopRequireDefault(require(\"react-native-responsive-image\"));\n\nvar _trivia = _interopRequireDefault(require(\"../Screens/trivia/trivia\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\sahil\\\\Desktop\\\\ybh\\\\src\\\\common\\\\Bottomtabs.js\";\n\nvar BottomTab = function BottomTab(_ref) {\n  var state = _ref.state,\n      descriptors = _ref.descriptors,\n      navigation = _ref.navigation;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.ButtonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n      accessibilityRole: \"button\",\n      testID: options.tabBarTestID,\n      onLongPress: onLongPress,\n      accessibilityStates: isFocused ? ['selected'] : [],\n      onPress: onPress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, _react.default.createElement(_reactNative.View, {\n      style: {\n        alignItems: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, label === 'GetAdvice2' && _react.default.createElement(_reactNative.View, {\n      style: isFocused ? {\n        height: 40,\n        width: 40,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      } : {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: _images.getadvice,\n      initHeight: \"25\",\n      initWidth: \"20\",\n      style: isFocused ? {\n        tintColor: 'white'\n      } : {\n        tintColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 15\n      }\n    })), label === 'home' && _react.default.createElement(_reactNative.View, {\n      style: isFocused ? {\n        height: 40,\n        width: 40,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      } : {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: _images.homeicon,\n      initHeight: \"25\",\n      initWidth: \"20\",\n      style: isFocused ? {\n        tintColor: 'white'\n      } : {\n        tintColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }\n    })), label === 'RelationMeter' && _react.default.createElement(_reactNative.View, {\n      style: isFocused ? {\n        height: 40,\n        width: 40,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      } : {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: _images.relationmeter,\n      initHeight: \"27\",\n      initWidth: \"27\",\n      style: isFocused ? {\n        tintColor: 'white'\n      } : {\n        tintColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 15\n      }\n    })), label === 'ShareImage' && _react.default.createElement(_reactNative.View, {\n      style: isFocused ? {\n        height: 40,\n        width: 40,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      } : {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: _images.shareimage,\n      initHeight: \"25\",\n      initWidth: \"25\",\n      style: isFocused ? {\n        tintColor: 'white'\n      } : {\n        tintColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 15\n      }\n    })), label === 'Trivia' && _react.default.createElement(_reactNative.View, {\n      style: isFocused ? {\n        height: 40,\n        width: 40,\n        borderRadius: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      } : {\n        height: 40,\n        width: 40,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNativeResponsiveImage.default, {\n      source: _images.trivia,\n      initHeight: \"25\",\n      initWidth: \"25\",\n      style: isFocused ? {\n        tintColor: 'white'\n      } : {\n        tintColor: 'white'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }))));\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  ButtonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#9F74C5',\n    paddingHorizontal: (0, _reactNativeResponsiveScreen.widthPercentageToDP)(8),\n    paddingVertical: (0, _reactNativeResponsiveScreen.heightPercentageToDP)(2),\n    borderTopRightRadius: 5,\n    borderTopLeftRadius: 5\n  }\n});\n\nvar _default = BottomTab;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/sahil/Desktop/ybh/src/common/Bottomtabs.js"],"names":["BottomTab","state","descriptors","navigation","styles","ButtonContainer","routes","map","route","index","options","key","label","tabBarLabel","undefined","title","name","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","tabBarTestID","alignItems","height","width","borderRadius","justifyContent","getadvice","tintColor","homeicon","relationmeter","shareimage","trivia","StyleSheet","create","flexDirection","backgroundColor","paddingHorizontal","paddingVertical","borderTopRightRadius","borderTopLeftRadius"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, StyleSheet, Platform } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport {\r\n  heightPercentageToDP as hp,\r\n  widthPercentageToDP as wp,\r\n} from 'react-native-responsive-screen';\r\nimport { getadvice, relationmeter, shareimage, trivia, homeicon,\r\n   bottomtabshome,bottomtabcamera,bottomtabsadvice,bottomtabsmeter, bottomtabstrivia} from '../common/images';\r\n// import {RedColor, whiteColor, purpleColor} from '../../utils/fonts';\r\n// import {Red12pxFont} from '../../utils/CommonStyles';\r\n// import {camera} from '../../utils/Images';\r\nimport ResponsiveImage from 'react-native-responsive-image';\r\nimport Trivia from '../Screens/trivia/trivia';\r\n\r\nconst BottomTab = ({ state, descriptors, navigation }) => {\r\n    // const focusedOptions = descriptors[state.routes[state.index].key].options;\r\n  \r\n    // if (focusedOptions.tabBarVisible === true) {\r\n    //   return null;\r\n    // }\r\n\r\n\r\n  return (\r\n    <View style={styles.ButtonContainer}>\r\n      {state.routes.map((route, index) => {\r\n        const { options } = descriptors[route.key];\r\n        const label =\r\n          options.tabBarLabel !== undefined\r\n            ? options.tabBarLabel\r\n            : options.title !== undefined\r\n              ? options.title\r\n              : route.name;\r\n\r\n        const isFocused = state.index === index;\r\n\r\n        const onPress = () => {\r\n          const event = navigation.emit({\r\n            type: 'tabPress',\r\n            target: route.key,\r\n            canPreventDefault: true,\r\n\r\n          });\r\n\r\n          if (!isFocused && !event.defaultPrevented) {\r\n            navigation.navigate(route.name);\r\n          }\r\n        };\r\n\r\n        const onLongPress = () => {\r\n          navigation.emit({\r\n            type: 'tabLongPress',\r\n            target: route.key,\r\n          });\r\n        };\r\n\r\n    //     return (\r\n    //       <TouchableOpacity\r\n    //         accessibilityRole=\"button\"\r\n    //         testID={options.tabBarTestID}\r\n    //         onLongPress={onLongPress}\r\n    //         accessibilityStates={isFocused ? ['selected'] : []}\r\n    //         onPress={onPress}>\r\n    //         <View style={{ alignItems: 'center', }}>\r\n    //           {label === 'GetAdvice2' && (\r\n    //             <ResponsiveImage\r\n    //               source={isFocused ? bottomtabsadvice : getadvice}\r\n    //               style={\r\n    //                 isFocused\r\n    //                   ? {\r\n    //                     height: 79,\r\n    //                     width: 83,\r\n    //                     bottom: Platform.OS === 'ios' ? 26 : 0,\r\n\r\n    //                   }\r\n    //                   : {\r\n    //                     height: 40,\r\n    //                     width: 40,\r\n    //                     alignItems: 'center',\r\n    //                     justifyContent: 'center',\r\n    //                   }\r\n\r\n    //               }\r\n    //             />\r\n\r\n    //           )}\r\n\r\n    //           {label === 'home' && (\r\n\r\n    //             <ResponsiveImage\r\n    //               source={isFocused ? bottomtabshome : homeicon}\r\n    //               style={\r\n    //                 isFocused\r\n    //                   ? {\r\n    //                     height: 79,\r\n    //                     width: 83,\r\n    //                     bottom: Platform.OS === 'ios' ? 26 : 0,\r\n\r\n    //                   }\r\n    //                   : {\r\n    //                     height: 40,\r\n    //                     width: 40,\r\n    //                     alignItems: 'center',\r\n    //                     justifyContent: 'center',\r\n    //                   }\r\n\r\n    //               }\r\n    //             ></ResponsiveImage>\r\n\r\n\r\n    //           )}\r\n    //           {label === 'RelationMeter' && (\r\n\r\n    //             <ResponsiveImage\r\n    //               source={isFocused ? bottomtabsmeter : relationmeter}\r\n    //               style={\r\n    //                 isFocused\r\n    //                   ? {\r\n    //                     height: 79,\r\n    //                     width: 83,\r\n    //                     bottom: Platform.OS === 'ios' ? 26 : 0,\r\n\r\n    //                   }\r\n    //                   : {\r\n    //                     height: 40,\r\n    //                     width: 40,\r\n    //                     alignItems: 'center',\r\n    //                     justifyContent: 'center',\r\n    //                   }\r\n\r\n    //               }\r\n    //             ></ResponsiveImage>\r\n    //             // </View>\r\n    //           )}\r\n    //           {label === 'ShareImage' && (\r\n\r\n    //             <ResponsiveImage\r\n    //               source={isFocused ? bottomtabcamera : shareimage}\r\n    //               style={\r\n    //                 isFocused\r\n    //                   ? {\r\n    //                     height: 79,\r\n    //                     width: 83,\r\n    //                     bottom: Platform.OS === 'ios' ? 26 : 0,\r\n    //                   }\r\n    //                   : {\r\n    //                     height: 40,\r\n    //                     width: 40,\r\n    //                     alignItems: 'center',\r\n    //                     justifyContent: 'center',\r\n    //                   }\r\n\r\n    //               }\r\n    //             ></ResponsiveImage>\r\n\r\n    //           )}\r\n    //           {label === 'Trivia' && (\r\n    //             <ResponsiveImage\r\n    //               source={isFocused ? bottomtabstrivia : trivia}\r\n    //               style={\r\n    //                 isFocused\r\n    //                   ? {\r\n    //                     height: 79,\r\n    //                     width: 83,\r\n    //                     bottom: Platform.OS === 'ios' ? 26 : 0,\r\n    //                   }\r\n    //                   : {\r\n    //                     height: 40,\r\n    //                     width: 40,\r\n    //                     alignItems: 'center',\r\n    //                     justifyContent: 'center',\r\n    //                     tintcolor:\"red\"\r\n    //                   }\r\n\r\n    //               }\r\n    //             ></ResponsiveImage>\r\n                \r\n    //           )}\r\n            \r\n    //         </View>\r\n    //       </TouchableOpacity>\r\n    //     );\r\n    //   })}\r\n    // </View>\r\n    return (\r\n      <TouchableOpacity\r\n        accessibilityRole=\"button\"\r\n        testID={options.tabBarTestID}\r\n        onLongPress={onLongPress}\r\n        accessibilityStates={isFocused ? ['selected'] : []}\r\n        onPress={onPress}>\r\n          \r\n        <View style={{alignItems: 'center'}}>\r\n          {label === 'GetAdvice2' && (\r\n            <View\r\n              style={\r\n                isFocused\r\n                  ? {\r\n                      // backgroundColor: 'white',\r\n                      height: 40,\r\n                      width: 40,\r\n                      borderRadius: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n                  : {\r\n                      height: 40,\r\n                      width: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n              }>\r\n              <ResponsiveImage\r\n                source={getadvice}\r\n                initHeight=\"25\"\r\n                initWidth=\"20\"\r\n                style={\r\n                  isFocused\r\n                    ? {\r\n                        tintColor: 'white',\r\n                      }\r\n                    : {tintColor: 'white'}\r\n                }\r\n             \r\n              />\r\n            </View>\r\n          )}\r\n             {label === 'home' && (\r\n            <View\r\n              style={\r\n                isFocused\r\n                  ? {\r\n                      // backgroundColor: 'white',\r\n                      height: 40,\r\n                      width: 40,\r\n                      borderRadius: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n                  : {\r\n                      height: 40,\r\n                      width: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n              }>\r\n              <ResponsiveImage\r\n                source={homeicon}\r\n                initHeight=\"25\"\r\n                initWidth=\"20\"\r\n                style={\r\n                  isFocused\r\n                    ? {\r\n                        tintColor: 'white',\r\n                      }\r\n                    : {tintColor: 'white'}\r\n                }\r\n              />\r\n            </View>\r\n          )}\r\n          {label === 'RelationMeter' && (\r\n            \r\n            <View\r\n              style={\r\n                isFocused\r\n                  ? {\r\n                      // backgroundColor: 'white',\r\n                      height: 40,\r\n                      width: 40,\r\n                      borderRadius: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n                  : {\r\n                      height: 40,\r\n                      width: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n              }>\r\n              <ResponsiveImage\r\n                source={relationmeter}\r\n                initHeight=\"27\"\r\n                initWidth=\"27\"\r\n                style={\r\n                  isFocused\r\n                    ? {\r\n                        tintColor: 'white',\r\n                      }\r\n                    : {tintColor: 'white'}\r\n                }\r\n              />\r\n              \r\n            </View>\r\n         \r\n          )}\r\n          {label === 'ShareImage' && (\r\n            <View\r\n              style={\r\n                isFocused\r\n                  ? {\r\n                      // backgroundColor: 'white',\r\n                      height: 40,\r\n                      width: 40,\r\n                      borderRadius: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n                  : {\r\n                      height: 40,\r\n                      width: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n              }>\r\n              <ResponsiveImage\r\n                source={shareimage}\r\n                initHeight=\"25\"\r\n                initWidth=\"25\"\r\n                style={\r\n                  isFocused\r\n                    ? {\r\n                        tintColor: 'white',\r\n                      }\r\n                    : {tintColor: 'white'}\r\n                }\r\n              />\r\n            </View>\r\n          )}\r\n          {label === 'Trivia' && (\r\n            <View\r\n              style={\r\n                isFocused\r\n                  ? {\r\n                      // backgroundColor: 'white',\r\n                      height: 40,\r\n                      width: 40,\r\n                      borderRadius: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n                  : {\r\n                      height: 40,\r\n                      width: 40,\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                    }\r\n              }>\r\n              <ResponsiveImage\r\n                source={trivia}\r\n                initHeight=\"25\"\r\n                initWidth=\"25\"\r\n                style={\r\n                  isFocused\r\n                    ? {\r\n                        tintColor: 'white',\r\n                      }\r\n                    : {tintColor: 'white'}\r\n                }\r\n              />\r\n            </View>\r\n          )}\r\n          {/* <Text style={[{color: isFocused ? 'white' : 'white'}]}>\r\n            {label}\r\n          </Text> */}\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  })}\r\n \r\n</View>\r\n\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  ButtonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    backgroundColor: '#9F74C5',\r\n    paddingHorizontal: wp(8),\r\n    paddingVertical: hp(2),\r\n     borderTopRightRadius: 5,\r\n     borderTopLeftRadius: 5,\r\n\r\n  },\r\n});\r\nexport default BottomTab;\r\n"]},"metadata":{},"sourceType":"script"}